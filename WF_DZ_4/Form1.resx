<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QA6RXhpZgAATU0AKgAAAAgAA1EQAAEAAAABAQAAAFERAAQAAAAB
        AAAAAFESAAQAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA4ADgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4Pooor+vD+OwooooAKKKKACiiigC54f8AD2oeLNZt9N0uxvNS
        1C6bbDbWsLTTSnr8qqCT6+wr2P4Rf8E4vjP8e/Dt9q3g3wY/iDT9Lu2sL2a21OzVbO4CqxicvKoDbXQ4
        BONwBweK9T/4J4az8PfGn7PXxO+GGoeJLH4efErxyEi0nxLfHy4bi2Gwmx87rErsrB1yN6y/xFdtfaHw
        7/ZL1T4C/wDBJ/w78PNe0n4L6zqF94qutc1+28aaxew6RGu51gljlshudtiQEZIUKTkbhgfh+M8YaFDi
        HE8P4zlwtWnUhClGtdSxEJQU3WpNyhCcFJunywlKSlG83DmUT9IybgmnisJDGXdSDg5ScGrQknZQlpJq
        TXvXaSs9E7XPzX8Tf8E6vjd4N+MPh3wDqnw51yz8WeLkmk0axZ4WGorEheUxyhzEdijLZcYBGeozp/Fz
        /glz8fPgP8PNQ8WeLvhvqmi+H9JEZuruS8tJBHvkWNBtjlZ2LO6qAoJJYV+kHg/9rr4K3f8AwUn8D6xb
        /FTwfY+H/hL8Mp9MtoJ9Q+y+GdP1eXybf7NpzSKsjL5StvY7ztVBnIIHz18cG8B23jLwDfN4s/ZS8FXF
        14ztb668TfD6/wBR8QajpUkfm3Cz3FvcFY2tjOsYkJPVl7Zr7TD8RZlOpCNSmopxTfuS11k7L3rr3Utl
        J3ez0usRwrlkKc5QqOXvNL346K0Vd+7Z+831irLpqfNN7/wSp/aG07wLc+Irj4W69Dp9naG/nhaa2+3Q
        24BYyNaeZ54GATymeOlXPBf/AASP/aN+Ing/SfEGi/C3WL7R9ctIr+xuVvbNRPBKgeN9rTBgGUg4YA89
        K+5f2mvjd8IdY8JfFTxh8TvEnwTvvHl5o72XhLxR8KfEt5D4l8RS7NkP2u3icrCnyw71kldAAw5ABPzB
        +xD8ZvD/AMH/APgmD+0hH/wkli3xG8fGy8N6Nosd0ZNSltRhZpI4Qd/l7biX5gMfuj6VpRzzNKmFddRi
        mpRjrCVveaTafPtG922ltZpGVfh7KqWKVFyk4uMpaTjdcqbV1ybytZJN73TZ8w/H79nLxr+y548Xwx4+
        0Gbw7rzWsd6LOWeKZ/JcsEcmJ2UZKtwTnjp0ork9ZsL7Tb4w6hHdQ3SqMpcBhIo7ZDcj6GivssPKUqcZ
        SkpO260T9NXp82fB4jkVRqmnFX0Td2vV2X5Iqkbhg8g9q734V/tS/En4IKqeEfHXijQYV6W9rqEn2f8A
        79ElP/Ha4KiuXNMpwOZYd4TMaEK1N7xqRjOL9YyTT+4rC4yvhp+0w83CXeLaf3o+gbj/AIKbfFTW4lXx
        BJ4J8W44La54R067kf6t5QY/nWZd/tyX185ab4W/AuSRuSw8EwKT/wB8sBXiNFfG0fCfg6h/uuW0aXlT
        gqa+6HKj2JcVZvL+JiJS/wAT5n97uz1y7/bH1pmLWPgv4R6O56PaeCbEsv0MiPXPeJP2m/Hnim0a3uPE
        t5a2rDBt9Oji06Ej02W6oCPYiuEor2sLwTw/hpKdLBUuZbScIuS9JNN/iclXPMwqK0q0rdk2l9yshXdp
        HZmZmZjkknJJopKK+oPKCiiigAooooAKKKKACiiigD//2Q==
</value>
  </data>
</root>